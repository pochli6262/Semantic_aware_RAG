You are a Python expert.

A user gives you the following Python program which is buggy.

## Problem Description (from dataset)
Score : 100 points

### Problem Statement

There is an enemy with stamina A. Every time you attack the enemy, its stamina reduces by B.

At least how many times do you need to attack the enemy to make its stamina 0 or less?

### Constraints

* 1 \le A,B \le 10^{18}
* A and B are integers.

---

### Input

The input is given from Standard Input in the following format:

```
A B
```

### Output

Print the answer.

---

### Sample Input 1

```
7 3
```

### Sample Output 1

```
3
```

Attacking three times make the enemy's stamina -2.

Attacking only twice makes the stamina 1, so you need to attack it three times.

---

### Sample Input 2

```
123456789123456789 987654321
```

### Sample Output 2

```
124999999
```

---

### Sample Input 3

```
999999999999999998 2
```

### Sample Output 3

```
499999999999999999
```

## Your Analysis (1-sentence bug summary)
The code uses floating-point division (A/B) and int() when A is divisible by B, which can lose precision for very large integers and yield an incorrect quotient instead of using integer division.

## Buggy Program
A,B = map(int,input().split())
if A%B == 0:
  print(int(A/B))
else:
  print(int(A//B)+1)

## Related Known Fixes (retrieved diffs)
### Diff 1
--- 
+++ 
@@ -5,7 +5,7 @@
         print(A-B)
         continue
     ans = 10**18
-    for k in range(1, 10**7):
+    for k in range(1, 10**8):
         if A*k > B:
             ans = min(ans, A*k-B)
             break

### Diff 2
--- 
+++ 
@@ -7,7 +7,7 @@
     
 ans = 0
 
-for x in range(1,18):
+for x in range(1,19):
     if 10**x <= N:
         ans += S(1,9*10**(x-1))
         ans %= mod

### Diff 3
--- 
+++ 
@@ -1,6 +1,6 @@
 B=int(input())
 a=-1
-for i in range(1,B):
+for i in range(1,17):
     if i**i==B:
         a=i
         break

### Diff 4
--- 
+++ 
@@ -36,7 +36,7 @@
     B[1]+=B[4]
     B[4]=0
   B[3]-=A[2]
-  A[0]+=A[2]
+  B[0]+=A[2]
   if A[1]>B[1]+B[2]+2*B[3]+2*B[4]:
     print('No')
     continue

### Diff 5
--- 
+++ 
@@ -1,5 +1,7 @@
+
 N = int(input())
 A = list(map(int, input().split()))
+
 
 count = [0 for _ in range(10**6)]
 for i in range(N):
@@ -42,7 +44,6 @@
     count_rect[c] = q
     #print(i, c, count[i], count_rect[c])
 
-
 ans = 0
 for a in A:
     p = a
@@ -50,7 +51,7 @@
     check = True
     for j in [0,1,2,3,4,5]:
         b[j] = 10-p%10
-        if b[j]<=4:
+        if b[j]<=5:
             check = False
         p //= 10
     

Your task:
1) Identify the single incorrect line according to the problem summary and the retrieved diffs.
2) Assume EXACTLY ONE line is wrong.
3) Provide the corrected version of the ENTIRE program, changing only that single line â€” all other lines must remain identical.
4) Do not restructure or rewrite unrelated code.
5) Respond ONLY in JSON format:

{
  "explanation": "Explain what was wrong in that single line and how you fixed it (mention which diff patterns inspired the fix if applicable).",
  "fixed_code": "The FULL program with only that ONE line corrected."
}