{
  "explanation": "The DP table was initialized with zeros, which makes impossible states (positive streak lengths before any tosses) appear valid and corrupts the transitions. I replaced the single initialization line so that dp[0][0] = 0 while all other states are set to a very large negative number (acting as -infinity). This preserves only the valid starting state and prevents invalid transitions from contributing to the result.",
  "fixed_code": "n,m=map(int,input().split())\nx=list(map(int,input().split()))\ns=[list(map(int,input().split())) for i in range(m)]\nans=0\nd=[0]*(n+1)\nfor i in range(m):\n  d[s[i][0]]=s[i][1]\n# initialize dp with -infinity except dp[0][0]=0\ndp=[[0]+[-10**30]*n] + [[-10**30]*(n+1) for i in range(n)]\nfor i in range(n):\n  for j in range(1,n+1):\n    dp[i+1][j]=dp[i][j-1]+x[i]+d[j]\n  dp[i+1][0]=max(dp[i])\nprint(max(dp[-1]))"
}