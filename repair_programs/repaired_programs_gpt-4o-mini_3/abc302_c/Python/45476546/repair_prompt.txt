You are a Python repair assistant.

A user gives you the following buggy program.

## Buggy Program
import itertools
S = []
N,M = map(int,input().split())
for _ in range(N):
  s = list(input())
  S.append(s)
com = itertools.product(S,repeat = N)
for co in com:
  ans = "Yes"
  for k in range(len(co)-1):
    no = 0
    for j in range(M):
      if co[k][j] != co[k+1][j]:
        no+=1
    if no != 1:
      ans = "No"
  if ans == "Yes":
    print(ans)
    exit()
print(ans)

## Related Example Fixes (retrieved from similar problems)
These examples are only references. 
They must NOT be copied directly, but can inspire how similar bugs were fixed.

### Example 1
--- Buggy Code ---
N = int(input())
S = input()
ok = ["a", "b"]
for i in range(N-1):
    if S[i] in ok and S[i+1] in ok:
        print("Yes")
        exit()
print("No")

--- Correct Code ---
N = int(input())
S = input()
ok = ["a", "b"]
for i in range(N-1):
    if S[i] in ok and S[i+1] in ok and S[i] != S[i+1]:
        print("Yes")
        exit()
print("No")


### Example 2
--- Buggy Code ---
N, M = map(int, input().split())
X=[]
for _ in range(M):
  _, *x=map(int, input().split())
  X.append(set(x))
flag=False
from itertools import combinations
for cmb in combinations(range(1,N+1), 2):
  for i in X:
    if cmb[0] in i and cmb[1] in i:
      flag=True
      break
    else:
      print("No")
      exit()
print("Yes" if flag else "No") 

--- Correct Code ---
N, M = map(int, input().split())
X=[]
for _ in range(M):
  _, *x=map(int, input().split())
  X.append(set(x))
flag=False
from itertools import combinations
for cmb in combinations(range(1,N+1), 2):
  for i in X:
    if cmb[0] in i and cmb[1] in i:
      flag=True
      break
  else:
      print("No")
      exit()
print("Yes" if flag else "No")


### Example 3
--- Buggy Code ---
N=int(input())
A=list(map(int,input().split()))
for i in range(1,N,2):
  A[i]^=1
if A==[0]*N: print("Yes") ; exit()
for i in range(N):
  if A[i]==1: break
S=[j%2 for j in range(N)]
idx=0
for k in range(i,N):
  if idx>=N: break
  if A[k]!=S[idx]: idx+=2
  else: idx+=1
if idx>=N: print("No")
else: print("Yes")

--- Correct Code ---
N=int(input())
A=list(map(int,input().split()))
for i in range(1,N,2):
  A[i]^=1
if A==[0]*N: print("Yes") ; exit()
for i in range(N):
  if A[i]==1: break
S=[j%2 for j in range(N)]
idx=0
for k in range(i,N):
  if idx>=N: break
  if A[k]==S[idx]: idx+=2
  else: idx+=1
if idx>=N: print("No")
else: print("Yes")


Your task:
1) Identify the single incorrect line in the buggy program.
2) Assume EXACTLY ONE line is wrong.
3) Provide the corrected version of the ENTIRE program, changing only that single line.
4) Do not restructure or rewrite unrelated code.
5) Respond ONLY in JSON format:

{
  "explanation": "Explain the bug and how you fixed it.",
  "fixed_code": "The FULL program with only that ONE line corrected."
}