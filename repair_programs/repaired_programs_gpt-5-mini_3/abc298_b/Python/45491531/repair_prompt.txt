You are a Python repair assistant.

A user gives you the following buggy program.

## Buggy Program
#!/usr/bin/env python3


def r(a):
    a = a[::-1]
    a = list(map(list, zip(*a)))
    return a


n = int(input())
a = [list(input().split()) for _ in range(n)]
b = [list(input().split()) for _ in range(n)]

f = True
for _ in range(3):
    a = r(a)

    f = True
    for al, bl in zip(a, b):
        for av, bv in zip(al, bl):
            if av == "1":
                if bv == "0":
                    f = False
                    break
        if not f:
            break

    if f:
        print("Yes")
        exit()
print("No")


## Related Example Fixes (retrieved from similar problems)
These examples are only references. 
They must NOT be copied directly, but can inspire how similar bugs were fixed.

### Example 1
--- Buggy Code ---
n=int(input())
a=list(map(int,input().split()))
l=0
while l<n:
  if a[l]^(l&1):
    l+=1
  else:
    break
r=0
a+=[0]
for i in range(l,n):
  r+=a[i]^a[i+1]
print ("Yes" if l>=r else "No")

--- Correct Code ---
n=int(input())
a=list(map(int,input().split()))
l=0
while l<n:
  if a[l]==(l&1):
    l+=1
  else:
    break
r=0
a+=[0]
for i in range(l,n):
  r+=a[i]^a[i+1]
print ("Yes" if l>=r else "No")


### Example 2
--- Buggy Code ---
n = int(input())
s = list(input())
a = s[:n // 2]
b = list(reversed(s[(n + 1) // 2:]))

def main():
    if a[0] != b[0]:
      if a[0] == "A":
         return False

    return True

if main():
   print("Yes")
else:
   print("No")        



--- Correct Code ---
n = int(input())
s = list(input())
a = s[:n // 2]
b = list(reversed(s[(n + 1) // 2:]))

def main():
    if a[0] != b[0]:
      if a[0] == "A":
         return False
      if n == 2:
         return False

    return True

if main():
   print("Yes")
else:
   print("No")


### Example 3
--- Buggy Code ---
#!/usr/bin/env python3

T = int(input())

def solve(n, a, b):
    if a >= n + 1:
        return 0
    
    if a == n:
        if b == 0:
            return 1
        else:
            return 0
    
    c = (b + n - a - 1) // (n - a)

    if a + c <= n:
        return 1
    
    return 0

for _ in range(T):
    n, a, b = map(int, input().split())
    
    if solve(n, a, b):
        print('Yes')

    else:
        print('No')

--- Correct Code ---
#!/usr/bin/env python3

T = int(input())

def solve(n, a, b):
    if a >= n + 1:
        return 0
    
    if a == n:
        if b == 0:
            return 1
        else:
            return 0
    
    c = (b + n - a - 1) // (n - a)

    if c > (n + 1) // 2:
        return 0

    if a + c <= n:
        return 1
    
    return 0

for _ in range(T):
    n, a, b = map(int, input().split())
    
    if solve(n, a, b):
        print('Yes')

    else:
        print('No')


Your task:
1) Identify the single incorrect line in the buggy program.
2) Assume EXACTLY ONE line is wrong.
3) Provide the corrected version of the ENTIRE program, changing only that single line.
4) Do not restructure or rewrite unrelated code.
5) Respond ONLY in JSON format:

{
  "explanation": "Explain the bug and how you fixed it.",
  "fixed_code": "The FULL program with only that ONE line corrected."
}