{
  "explanation": "The program allowed the remaining time t to become exactly zero after paying a move cost and still continue. In the problem context you must have strictly positive time to make a move, so reaching zero should be treated as failure. I fixed the inequality to check for <= 0 instead of < 0 so the program fails when t would become zero or negative after a move.",
  "fixed_code": "n,m,t=map(int,input().split())\ns=list(map(int,input().split()))\ndic=dict()\nfor i in range(m):\n    a,b=map(int,input().split())\n    dic[a]=b\n\nfor now in range(1,n):\n    \n    if t-s[now-1]<=0:\n        print(\"No\")\n        exit()\n    else:\n        t-=s[now-1]\n    if now+1 in dic:\n        t+=dic[now+1]\n    \nprint(\"Yes\")"
}