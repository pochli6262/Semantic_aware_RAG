You are a Python repair assistant.

A user gives you the following buggy program.

## Buggy Program
N,M=map(int,input().split())
mod=998244353

answer=(-1)**(N%2)*(M-1)+pow(M-1,N,mod)
print(answer)

## Related Example Fixes (retrieved from similar problems)
These examples are only references. 
They must NOT be copied directly, but can inspire how similar bugs were fixed.

### Example 1
--- Buggy Code ---
N,M = map(int,input().split())
MOD = 998244353
ret = 0
for i in range(60):
    if(M and 2**i):
        tmp = N // ((2**i)*2)
        ret = ret + tmp*(2**i)
        tmp = N % ((2**i)*2)
        if(tmp >= (2**i)):
            ret = ret + tmp - (2**i) + 1
        ret = ret % MOD
print(ret)

--- Correct Code ---
N,M = map(int,input().split())
MOD = 998244353
ret = 0
for i in range(60):
    if(M & 2**i):
        tmp = N // ((2**i)*2)
        ret = ret + tmp*(2**i)
        tmp = N % ((2**i)*2)
        if(tmp >= (2**i)):
            ret = ret + tmp - (2**i) + 1
        ret = ret % MOD
print(ret)


### Example 2
--- Buggy Code ---
N, M = map(int, input().split())
MOD = 998244353

if N == 0 or M == 0:
  print(0)
  exit()

A = []
n = 1
while n <= N:
  A.append(n)
  n *= 2
#print(A)

B = []
NN = N + 1
for a in A:
  b = NN // a
  b1 = b // 2
  b2 = b % 2
  c = NN % a
  d = b1 * a + b2 * c
  d %= MOD
  B.append(d)
B = B + [0] * 60
#print("B =", B)

MM = bin(M)
L = len(MM) - 2
ans = 0
#print("MM =", MM)
#print("L =", L)
for i in range(L):
  b = MM[-i-1]
  if b:
    ans += B[i]
    ans %= MOD
print(ans)

--- Correct Code ---
N, M = map(int, input().split())
MOD = 998244353

if N == 0 or M == 0:
  print(0)
  exit()

A = []
n = 1
while n <= N:
  A.append(n)
  n *= 2
#print(A)

B = []
NN = N + 1
for a in A:
  b = NN // a
  b1 = b // 2
  b2 = b % 2
  c = NN % a
  d = b1 * a + b2 * c
  d %= MOD
  B.append(d)
B = B + [0] * 60
#print("B =", B)

MM = bin(M)
L = len(MM) - 2
ans = 0
#print("MM =", MM)
#print("L =", L)
for i in range(L):
  b = int(MM[-i-1])
  if b:
    ans += B[i]
    ans %= MOD
print(ans)


### Example 3
--- Buggy Code ---
N, K = map(int, input().split())
MOD = 998244353

dp = [0]*(K+1)
dp[0] = 1
a = (N**2-2*N)%MOD*pow(N, -2, MOD)
b = 2*pow(N, -2, MOD)
for k in range(1, K+1):
    dp[k] = (dp[k-1]*a+b)%MOD

if N == 1:
    ans = 1
else:
    ans = dp[K] + (1-dp[K])*(N+2)//2

print(ans%MOD)


--- Correct Code ---
N, K = map(int, input().split())
MOD = 998244353

dp = [0]*(K+1)
dp[0] = 1
a = (N**2-2*N)%MOD*pow(N, -2, MOD)
b = 2*pow(N, -2, MOD)
for k in range(1, K+1):
    dp[k] = (dp[k-1]*a+b)%MOD

if N == 1:
    ans = 1
else:
    ans = dp[K] + (1-dp[K])*pow(N-1, -1, MOD)*(N+2)*(N-1)//2

print(ans%MOD)


Your task:
1) Identify the single incorrect line in the buggy program.
2) Assume EXACTLY ONE line is wrong.
3) Provide the corrected version of the ENTIRE program, changing only that single line.
4) Do not restructure or rewrite unrelated code.
5) Respond ONLY in JSON format:

{
  "explanation": "Explain the bug and how you fixed it.",
  "fixed_code": "The FULL program with only that ONE line corrected."
}