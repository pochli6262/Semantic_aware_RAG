You are a Python repair assistant.

A user gives you the following buggy program.

## Buggy Program
def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    n, p, q = getIntMap()
    a = getIntList()
    b = min([p - q + a[i] for i in range(n)])

    print(b if b < p else p)


if __name__ == "__main__":
    main()


## Related Example Fixes (retrieved from similar problems)
These examples are only references. 
They must NOT be copied directly, but can inspire how similar bugs were fixed.

### Example 1
--- Buggy Code ---
def getIntMap():
    return map(int, input().split())


def main():
    a, b = getIntMap()

    print(a*b)


main()

--- Correct Code ---
def getIntMap():
    return map(int, input().split())


def main():
    a, b = getIntMap()

    print(a**b)


main()


### Example 2
--- Buggy Code ---
def getInt():
    return int(input())

def main():
    n = getInt()
    a = [j for j in range(1, 9) if n % j == 0]

    r = ''
    for i in range(n + 1):
        x = [b for b in a if i % (n / b) == 0]
        if len(x) == 0:
            r += '-'
        else:
            r += str(min(x))
    print(r)

if __name__ == "__main__":
    main()

--- Correct Code ---
def getInt():
    return int(input())

def main():
    n = getInt()
    a = [j for j in range(1, 10) if n % j == 0]

    r = ''
    for i in range(n + 1):
        x = [b for b in a if i % (n / b) == 0]
        if len(x) == 0:
            r += '-'
        else:
            r += str(min(x))
    print(r)

if __name__ == "__main__":
    main()


### Example 3
--- Buggy Code ---
from itertools import combinations


def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    N, W = getIntMap()
    A = getIntList()

    res = set()
    for i in range(1, 4):
        for elem in combinations(A, i):
            if sum(elem) < W:
                res.add(sum(elem))

    print(len(res))


if __name__ == "__main__":
    main()


--- Correct Code ---
from itertools import combinations


def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    N, W = getIntMap()
    A = getIntList()

    res = set()
    for i in range(1, 4):
        for elem in combinations(A, i):
            if sum(elem) <= W:
                res.add(sum(elem))

    print(len(res))

if __name__ == "__main__":
    main()


Your task:
1) Identify the single incorrect line in the buggy program.
2) Assume EXACTLY ONE line is wrong.
3) Provide the corrected version of the ENTIRE program, changing only that single line.
4) Do not restructure or rewrite unrelated code.
5) Respond ONLY in JSON format:

{
  "explanation": "Explain the bug and how you fixed it.",
  "fixed_code": "The FULL program with only that ONE line corrected."
}