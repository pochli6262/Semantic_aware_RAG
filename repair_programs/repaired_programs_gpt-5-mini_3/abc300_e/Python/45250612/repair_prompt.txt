You are a Python repair assistant.

A user gives you the following buggy program.

## Buggy Program
N=int(input())
cnt=[0]*3
div=[2,3,5]
for i in range(3):
    x=div[i]
    while True:
        if N%x:
            break
        cnt[i]+=1
        N//=x
if N>1:
    print(0)
    
else:
    a,b,c=cnt
    dp=[[[0]*(c+1) for j in range(b+1)] for i in range(a+1)]
    mod=998244353
    dp[0][0][0]=1
    inv=pow(5,mod-2,mod)
    for i in range(a+1):
        for j in range(b+1):
            for k in range(c+1):
                dp[i][j][k]%=mod
                if i+1<=a:
                    dp[i+1][j][k]+=dp[i][j][k]*inv%mod
                if j+1<=b:
                    dp[i][j+1][k]+=dp[i][j][k]*inv%mod
                if i+2<=a:
                    dp[i+2][j][k]+=dp[i][j][k]*inv%mod
                if k+1<=c:
                    dp[i][j][k+1]=dp[i][j][k]*inv%mod
                if i+1<=a and j+1<=b:
                    dp[i+1][j+1][k]+=dp[i][j][k]*inv%mod
    print(dp[a][b][c])

## Related Example Fixes (retrieved from similar problems)
These examples are only references. 
They must NOT be copied directly, but can inspire how similar bugs were fixed.

### Example 1
--- Buggy Code ---
n=int(input())
mod=998244353 
c=[]

for i in range(n):
    a,b=map(int,input().split())
    c.append((a,b))
if n==1:
    print(0)
else:
    dp=[[0]*2 for i in range(n)]
    for j in range(2):
        if c[1][j]!=c[0][j]:
            dp[1][j]+=1
        if c[1][j]!=c[0][(j+1)%2]:
            dp[1][j]+=1
    
    for i in range(1,n-1):
        for j in range(2):
            if c[i+1][j]!=c[i][j]:
                dp[i+1][j]+=dp[i][j]
                dp[i+1][j]%=mod 
            if c[i+1][j]!=c[i][(j+1)%2]:
                dp[i+1][j]+=dp[i][(j+1)%2]
                dp[i+1][j]%=mod

    ans=dp[n-1][0]+dp[n-1][1]
    print(ans%mod)

--- Correct Code ---
n=int(input())
mod=998244353 
c=[]

for i in range(n):
    a,b=map(int,input().split())
    c.append((a,b))
if n==1:
    print(2)
else:
    dp=[[0]*2 for i in range(n)]
    for j in range(2):
        if c[1][j]!=c[0][j]:
            dp[1][j]+=1
        if c[1][j]!=c[0][(j+1)%2]:
            dp[1][j]+=1
    
    for i in range(1,n-1):
        for j in range(2):
            if c[i+1][j]!=c[i][j]:
                dp[i+1][j]+=dp[i][j]
                dp[i+1][j]%=mod 
            if c[i+1][j]!=c[i][(j+1)%2]:
                dp[i+1][j]+=dp[i][(j+1)%2]
                dp[i+1][j]%=mod

    ans=dp[n-1][0]+dp[n-1][1]
    print(ans%mod)


### Example 2
--- Buggy Code ---
n=int(input())
a=list(map(int,input().split()))
mod=998244353

b=500

dp1=[[0]*(b) for _ in range(n)]
dp2=[0]*n
dp2[0]=1

if a[0]<b:
  if a[0]<n:
    dp1[a[0]][a[0]]=1
else:
  for i in range(1,n//a[0]):
    dp2[i*a[0]]=1
    
for i in range(1,n):
  dp2[i]+=sum(dp1[i])
  dp2[i]%=mod
  for j in range(b):
    if i+j<n:
      dp1[i+j][j]+=dp1[i][j]
      dp1[i+j][j]%=mod
  if i+a[i]>=n:
    continue
  if a[i]<b:
    dp1[i+a[i]][a[i]]+=dp2[i]
    dp1[i+a[i]][a[i]]%=mod
  else:
    for j in range(1,(n-i-1)//a[i]+1):
      dp2[i+j*a[i]]+=dp2[i]
      dp2[i+j*a[i]]%=mod
  
print(sum(dp2)%mod)

--- Correct Code ---
n=int(input())
a=list(map(int,input().split()))
mod=998244353

b=500

dp1=[[0]*(b) for _ in range(n)]
dp2=[0]*n
dp2[0]=1

if a[0]<b:
  if a[0]<n:
    dp1[a[0]][a[0]]=1
else:
  for i in range(1,(n-1)//a[0]+1):
    dp2[i*a[0]]=1
    
for i in range(1,n):
  dp2[i]+=sum(dp1[i])
  dp2[i]%=mod
  for j in range(b):
    if i+j<n:
      dp1[i+j][j]+=dp1[i][j]
      dp1[i+j][j]%=mod
  if i+a[i]>=n:
    continue
  if a[i]<b:
    dp1[i+a[i]][a[i]]+=dp2[i]
    dp1[i+a[i]][a[i]]%=mod
  else:
    for j in range(1,(n-i-1)//a[i]+1):
      dp2[i+j*a[i]]+=dp2[i]
      dp2[i+j*a[i]]%=mod
  
print(sum(dp2)%mod)


### Example 3
--- Buggy Code ---
N = int(input())
mod = 998244353

dp = [[0]*11 for _ in range(N)]

for i in range(1,10):
    dp[0][i] = 1

for i in range(N-1):
    for j in range(1,10):
        dp[i+1][j] = (dp[i][j-1] + dp[i][j] + dp[i][j+1])%mod

for d in dp:
    print(d)
print(sum(dp[-1])%mod)

--- Correct Code ---
N = int(input())
mod = 998244353

dp = [[0]*11 for _ in range(N)]

for i in range(1,10):
    dp[0][i] = 1

for i in range(N-1):
    for j in range(1,10):
        dp[i+1][j] = (dp[i][j-1] + dp[i][j] + dp[i][j+1])%mod

print(sum(dp[-1])%mod)


Your task:
1) Identify the single incorrect line in the buggy program.
2) Assume EXACTLY ONE line is wrong.
3) Provide the corrected version of the ENTIRE program, changing only that single line.
4) Do not restructure or rewrite unrelated code.
5) Respond ONLY in JSON format:

{
  "explanation": "Explain the bug and how you fixed it.",
  "fixed_code": "The FULL program with only that ONE line corrected."
}