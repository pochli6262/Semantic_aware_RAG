{
  "explanation": "The bug was in the movement condition where the program incorrectly checked for the character 'W' instead of 'R'. This caused the rightward movement to fail. The correction was inspired by the need to adjust movement checks to align with the given problem's specifications. Specifically, I changed the check from 'if g[i][j] == \"W\":' to 'if g[i][j] == \"R\":'.",
  "fixed_code": "h,w=map(int,input().split())\ng=[]\nfor i in range(h):\n    tmp=input()\n    g.append(list(tmp))\nvisited=[[False]*w for _ in range(h)]\ni,j=0,0\nfor k in range(10**6):\n    if visited[i][j]==True:\n        print(-1)\n        exit()\n    if g[i][j]==\"U\":\n        if i==0:\n            print(i+1,j+1)\n            exit()\n        else:\n            visited[i][j]=True\n            i-=1\n    if g[i][j]==\"D\":\n        if i==h-1:\n            print(i+1,j+1)\n            exit()\n        else:\n            visited[i][j]=True\n            i+=1\n    if g[i][j]==\"L\":\n        if j==0:\n            print(i+1,j+1)\n            exit()\n        else:\n            visited[i][j]=True\n            j-=1\n    if g[i][j]==\"R\":\n        if j==w-1:\n            print(i+1,j+1)\n            exit()\n        else:\n            visited[i][j]=True\n            j+=1"
}