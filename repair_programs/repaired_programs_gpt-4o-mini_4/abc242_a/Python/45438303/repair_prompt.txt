You are a Python expert.

A user gives you the following Python program which is buggy.

## Problem Description (from dataset)
Score : 100 points

### Problem Statement

In a certain programming contest, T-shirts are awarded to participants according to the following rules.

* All participants who ranked A-th or higher get a T-shirt.
* Additionally, from the participants who ranked between (A+1)-th and B-th (inclusive), C participants chosen uniformly at random get a T-shirt.

There were 1000 participants in this contest, and all of them got different ranks.  
Iroha-chan, who participated in this contest, ranked X-th.  
Find the probability that she gets a T-shirt.

### Constraints

* All values in input are integers.
* 1 \le A < B \le 1000
* 1 \le C \le B-A
* 1 \le X \le 1000

---

### Input

Input is given from Standard Input in the following format:

```
A B C X
```

### Output

Print the answer.
Your output will be considered correct if the absolute or relative error from the judge's answer is at most 10^{−6}.

---

### Sample Input 1

```
30 500 20 103
```

### Sample Output 1

```
0.042553191489
```

Iroha-chan ranked 103-rd.  
She will get a T-shirt if she is among the 20 participants chosen uniformly at random from the 470 participants who ranked between 31-st and 500-th, which happens with probability \frac{20}{470}=0.04255319\dots.

---

### Sample Input 2

```
50 500 100 1
```

### Sample Output 2

```
1.000000000000
```

Iroha-chan ranked 1-st. This time, she is guaranteed to get a T-shirt.

---

### Sample Input 3

```
1 2 1 1000
```

### Sample Output 3

```
0.000000000000
```

Iroha-chan ranked 1000-th. This time, she will never get a T-shirt.

## Your Analysis (1-sentence bug summary)
The bug likely lies in the wrong calculation of the probability when Iroha-chan's rank falls between A and B, as the formula used does not account for the total number of participants eligible for selection.

## Buggy Program
A,B,C,X = map(int,input().split())
if X <= A:
  print(1.000000000000)
elif X < B:
  print(C/(B-A))
else:
  print(0.000000000000)

## Related Known Fixes (retrieved diffs)
### Diff 1
--- 
+++ 
@@ -2,6 +2,6 @@
 max_A=max(A,B,C)
 sum_B=A+B+C
 if sum_B-max_A>=max_A:
-    print(sum_B//2)
+    print(max_A)
 else:
     print(-1)

### Diff 2
--- 
+++ 
@@ -1,5 +1,5 @@
 A,B = map(int,input().split())
 if A%B == 0:
-  print(int(A/B))
+  print(int((A+B-1)//B))
 else:
   print(int(A//B)+1)

### Diff 3
--- 
+++ 
@@ -1,7 +1,7 @@
 A,B = map(int,input().split())
 if A + B == 3:
   print("3")
-elif A + B == 4:
+elif A + B == 4 and A != B:
   print("2")
 elif A + B == 5:
   print("1")

### Diff 4
--- 
+++ 
@@ -1,2 +1,2 @@
 A,B = map(int,input().split())
-print(A//B+1)
+print((A-1)//B+1)

### Diff 5
--- 
+++ 
@@ -1,6 +1,8 @@
 A,B = (map(int,input().split()))
 if A==1 and B==2:
     print(3)
+elif A==3 and B==1:
+    print(2)
 elif A==1 and B==3:
     print(2)
 elif A==2 and B==1:

Your task:
1) Identify the single incorrect line according to the problem summary and the retrieved diffs.
2) Assume EXACTLY ONE line is wrong.
3) Provide the corrected version of the ENTIRE program, changing only that single line — all other lines must remain identical.
4) Do not restructure or rewrite unrelated code.
5) Respond ONLY in JSON format:

{
  "explanation": "Explain what was wrong in that single line and how you fixed it (mention which diff patterns inspired the fix if applicable).",
  "fixed_code": "The FULL program with only that ONE line corrected."
}