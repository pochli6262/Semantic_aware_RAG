{
  "task": "abc242_a/Python/44475619",
  "query_summary": "In the else branch, it divides D by C instead of C by D, reversing the intended ratio.",
  "oracle_summary": "In the else branch, it divides D by C instead of C by D, reversing the intended ratio.",
  "retrieved": [
    {
      "summary": "The buggy code incorrectly outputs half of the total sum of A, B, and C instead of the maximum value among A, B, and C when the condition is met.",
      "diff": "--- \n+++ \n@@ -2,6 +2,6 @@\n max_A=max(A,B,C)\n sum_B=A+B+C\n if sum_B-max_A>=max_A:\n-    print(sum_B//2)\n+    print(max_A)\n else:\n     print(-1)"
    },
    {
      "summary": "The buggy code incorrectly computes the second element of the list `li` as `D - ans` instead of `abs(D) - ans`, which may lead to incorrect results when `D` is negative or when handling edge cases.",
      "diff": "--- \n+++ \n@@ -12,7 +12,7 @@\n     exit()\n \n ans = abs(X-A)%abs(D)\n-li = [ans,D-ans]\n+li = [ans,abs(D)-ans]\n \n if li[0] < li[1]:\n     print(li[0])"
    },
    {
      "summary": "The buggy code does not account for the case where both A and B are equal to 2, which should return 2 instead of -1 when their sum is 4.",
      "diff": "--- \n+++ \n@@ -1,7 +1,7 @@\n A,B = map(int,input().split())\n if A + B == 3:\n   print(\"3\")\n-elif A + B == 4:\n+elif A + B == 4 and A != B:\n   print(\"2\")\n elif A + B == 5:\n   print(\"1\")"
    },
    {
      "summary": "The buggy code contains duplicate conditional checks (`elif A==1 and B==2:` appears twice), which can lead to incorrect logic and undesired behavior.",
      "diff": "--- \n+++ \n@@ -1,6 +1,8 @@\n A,B = (map(int,input().split()))\n if A==1 and B==2:\n     print(3)\n+elif A==3 and B==1:\n+    print(2)\n elif A==1 and B==3:\n     print(2)\n elif A==2 and B==1:"
    },
    {
      "summary": "The problem in the buggy code is that in the case where D is negative, the calculation of the minimum of the differences involves using `X%D` instead of `abs(X%D)`, which can lead to incorrect results when X%D is negative.",
      "diff": "--- \n+++ \n@@ -20,4 +20,4 @@\n     if not an<=X<=a0:\n         print(min(abs(a0-X),abs(an-X)))\n     else:\n-        print(min(X%D,D-X%D))\n+        print(min(abs(X%D),abs(D-X%D)))"
    }
  ],
  "useful_diffs_indices": [
    1,
    2,
    5
  ],
  "useful_diffs_count": 3
}