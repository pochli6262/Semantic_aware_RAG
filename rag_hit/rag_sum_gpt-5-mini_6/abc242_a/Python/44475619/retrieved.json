{
  "task": "abc242_a/Python/44475619",
  "query_summary": "In the random-selection branch the code computes and prints (B−A)/C (D/C) instead of the correct probability C/(B−A), i.e., the numerator and denominator are swapped.",
  "oracle_summary": "In the else branch, it divides D by C instead of C by D, reversing the intended ratio.",
  "retrieved": [
    {
      "summary": "The buggy code incorrectly outputs half of the total sum of A, B, and C instead of the maximum value among A, B, and C when the condition is met.",
      "diff": "--- \n+++ \n@@ -2,6 +2,6 @@\n max_A=max(A,B,C)\n sum_B=A+B+C\n if sum_B-max_A>=max_A:\n-    print(sum_B//2)\n+    print(max_A)\n else:\n     print(-1)"
    },
    {
      "summary": "The buggy code does not account for the case where both A and B are equal to 2, which should return 2 instead of -1 when their sum is 4.",
      "diff": "--- \n+++ \n@@ -1,7 +1,7 @@\n A,B = map(int,input().split())\n if A + B == 3:\n   print(\"3\")\n-elif A + B == 4:\n+elif A + B == 4 and A != B:\n   print(\"2\")\n elif A + B == 5:\n   print(\"1\")"
    },
    {
      "summary": "The buggy code incorrectly compares the ratios Y/A and X/B in the conditional statement, which may lead to incorrect variable swaps and subsequent calculations.",
      "diff": "--- \n+++ \n@@ -2,7 +2,7 @@\n for i in range(T):\n   N,A,B,X,Y,Z=map(int, input().split())\n   Y,Z=min(Y,A*X),min(Z,B*X)\n-  if Y/A>X/B:\n+  if Y/A>Z/B:\n     Y,Z,A,B=Z,Y,B,A\n   ans=10**20\n   if N//A<2*A:"
    },
    {
      "summary": "The bug in the code is in the final calculation of the `else` block for the case when `D` is negative, where it incorrectly computes `abs((X-A)%D)-D` instead of `abs((X-A)%D-D)`, leading to incorrect output for certain input cases.",
      "diff": "--- \n+++ \n@@ -17,4 +17,4 @@\n     elif A+D*(N-1) > X:\n         print((A+D*(N-1))-X)\n     else:\n-        print(min(abs((X-A)%D), abs((X-A)%D)-D))\n+        print(min(abs((X-A)%D), abs((X-A)%D-D)))"
    },
    {
      "summary": "The buggy code incorrectly checks if the sum of B and C is greater than zero instead of ensuring it's not equal to zero, which fails to account for valid scenarios where A or D equals N-1.",
      "diff": "--- \n+++ \n@@ -1,7 +1,7 @@\n import math\n N,A,B,C,D=(int(x) for x in input().split())\n n=math.floor(N/2)\n-if abs(B-C)<=1 and B<=n and C<=n and B+C>0:\n+if (abs(B-C)<=1 and B<=n and C<=n and B+C!=0) or A==N-1 or D==N-1:\n   print(\"Yes\")\n else:\n   print(\"No\")"
    }
  ],
  "useful_diffs_indices": [
    1,
    3,
    4
  ],
  "useful_diffs_count": 3
}