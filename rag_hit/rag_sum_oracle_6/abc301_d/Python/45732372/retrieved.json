{
  "task": "abc301_d/Python/45732372",
  "query_summary": "The code prints the initial ans prematurely (before checking if it's > n and before maximizing '?' bits), causing incorrect output order and results.",
  "oracle_summary": "The code prints the initial ans prematurely (before checking if it's > n and before maximizing '?' bits), causing incorrect output order and results.",
  "retrieved": [
    {
      "summary": "The buggy code is missing a necessary indentation level for the `print(ans)` statement, which causes it to be outside the loop and will not print the maximum contiguous count correctly.",
      "diff": "--- \n+++ \n@@ -3,7 +3,7 @@\n \n ans = 0\n cnt = 0\n-muji = 0\n+muji = m\n \n for c in s:\n   match c:"
    },
    {
      "summary": "The buggy code fails to correctly initialize the variable `res`, which should be set to `max(0, n - 1)` instead of just `n - 1`, potentially leading to negative results for certain input cases.",
      "diff": "--- \n+++ \n@@ -19,7 +19,7 @@\n         d.append(p)\n ans = 0\n for _ in range(2):\n-    res = n - 1\n+    res = max(0, n - 1)\n     frm = 0\n     if _ == 1:\n         cnt = 0"
    },
    {
      "summary": "The problem in the buggy code is that the initial value of `ans` is set to infinity (`float(\"INF\")`) instead of starting with the maximum possible value (`r * n`), leading to incorrect results when calculating the minimum.",
      "diff": "--- \n+++ \n@@ -3,7 +3,7 @@\n sma = 0\n smb = 0\n mx = 0\n-ans = float(\"INF\")\n+ans = r * n\n for i in range(n):\n     sma += a[i]\n     smb += a[i] - l"
    },
    {
      "summary": "The buggy code incorrectly initializes the variable `ans` to 1 instead of 0, leading to an incorrect count of iterations in the while loop.",
      "diff": "--- \n+++ \n@@ -1,7 +1,7 @@\n #入力\n n, m, p = map(int, input().split())\n \n-ans = 1\n+ans = 0\n \n while m <= n:\n     ans += 1"
    },
    {
      "summary": "The problem in the buggy code is that it fails to update the maximum count (`ans`) after exiting the loop when a sequence of non-negative characters ends, which leads to an incorrect result if the string does not end with a '-' character.",
      "diff": "--- \n+++ \n@@ -14,6 +14,7 @@\n     else:\n         if flag == 1:\n             cnt+=1\n+ans=max(ans,cnt)\n flag=0\n cnt=0\n for i in range(n):\n@@ -26,8 +27,8 @@\n     else:\n         if flag == 1:\n             cnt+=1\n+ans=max(ans,cnt)\n if ans == 0:\n     print(-1)\n else:\n     print(ans)\n-    "
    }
  ],
  "useful_diffs_indices": [
    1,
    2,
    4,
    5
  ],
  "useful_diffs_count": 4
}