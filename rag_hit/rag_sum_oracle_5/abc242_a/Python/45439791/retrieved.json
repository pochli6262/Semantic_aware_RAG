{
  "task": "abc242_a/Python/45439791",
  "query_summary": "It uses X < A instead of X <= A, so when X equals A it outputs C/(B−A) instead of 1.",
  "oracle_summary": "It uses X < A instead of X <= A, so when X equals A it outputs C/(B−A) instead of 1.",
  "retrieved": [
    {
      "summary": "The buggy code does not account for the additional condition that both B and C must be non-zero while A and D are greater than zero, leading to incorrect output in certain cases.",
      "diff": "--- \n+++ \n@@ -1,5 +1,7 @@\n N, A, B, C, D = map(int, input().split())\n if abs(B - C) > 1:\n     print(\"No\")\n+elif B == 0 and C == 0 and A > 0 and D > 0:\n+    print(\"No\")\n else:\n     print(\"Yes\")"
    },
    {
      "summary": "The buggy code incorrectly compares the ratios Y/A and X/B in the conditional statement, which may lead to incorrect variable swaps and subsequent calculations.",
      "diff": "--- \n+++ \n@@ -2,7 +2,7 @@\n for i in range(T):\n   N,A,B,X,Y,Z=map(int, input().split())\n   Y,Z=min(Y,A*X),min(Z,B*X)\n-  if Y/A>X/B:\n+  if Y/A>Z/B:\n     Y,Z,A,B=Z,Y,B,A\n   ans=10**20\n   if N//A<2*A:"
    },
    {
      "summary": "The buggy code incorrectly outputs half of the total sum of A, B, and C instead of the maximum value among A, B, and C when the condition is met.",
      "diff": "--- \n+++ \n@@ -2,6 +2,6 @@\n max_A=max(A,B,C)\n sum_B=A+B+C\n if sum_B-max_A>=max_A:\n-    print(sum_B//2)\n+    print(max_A)\n else:\n     print(-1)"
    },
    {
      "summary": "The buggy code incorrectly checks the condition for the case where both B and C are zero, using \"if N == 0\" instead of the corrected \"if N <= 1\".",
      "diff": "--- \n+++ \n@@ -16,7 +16,7 @@\n             else:\n                 print(\"No\")\n         elif A == 0 and D == 0:\n-            if N == 0:\n+            if N <= 1:\n                 print(\"Yes\")\n             else:\n                 print(\"No\")"
    },
    {
      "summary": "The buggy code incorrectly prints the value of `A` when `A` is equal to `B`, while the correct code should print `1`.",
      "diff": "--- \n+++ \n@@ -3,7 +3,7 @@\n x=abs(A-B)\n ans=0\n if A==B:\n-    print(A)\n+    print(1)\n     exit()\n def make_divisors(n):\n     lower_divisors , upper_divisors = [], []"
    }
  ],
  "useful_diffs_indices": [
    1,
    2,
    5
  ],
  "useful_diffs_count": 3
}